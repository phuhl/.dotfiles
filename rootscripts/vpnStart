#!/bin/bash

conn_type='udp'
case "$1" in
    -t|--tcp)
        conn_type='tcp'
        shift
        ;;
esac

server=$1

if [ ! -f /etc/openvpn/client/nordvpn_${server}_${conn_type}.conf ]; then
    echo "'${1}' is not a valid nordvpn server. Exiting."
    exit 1
fi


systemctl start openvpn-client@nordvpn_${server}_${conn_type}

ip_should=$(cat /etc/openvpn/client/nordvpn_${server}_${conn_type}.conf | head -4 | tail -1 | awk '{print $2}')


# block all traffic except for vpn traffic
iptables-restore < /etc/iptables/iptables-vpn-only.rules
ip6tables-restore < /etc/iptables/ip6tables-vpn-only.rules
if [ "$conn_type" = "udp" ]; then
    iptables -A OUTPUT -p udp -m udp -d $ip_should --dport 1194 -j ACCEPT
else
    iptables -A OUTPUT -p tcp -m udp -d $ip_should --dport 443 -j ACCEPT
fi
iptables -A OUTPUT -j REJECT --reject-with icmp-port-unreachable  



# requires pacman -S bind-tools
test -z $(whereis dig | awk '{print $2}') && echo "dig not installed, run 'pacman -S bind-tools'" 


sleep 0.3

for i in {1..100}
do
    #    if [ "$ip_is" = "$ip_should" ]; then
    if [ "$nordvpn_prot" = "1" ]; then
        echo -e "\nok"
        vpnStatus
        exit
    else
        echo -n "."
        sleep 0.1
        nordvpn_prot=$(wget -q -O- "https://nordvpn.com/wp-admin/admin-ajax.php?action=get_user_info_data" | grep -o \"status\":true | wc -l)
        #ip_is=$(dig +short myip.opendns.com @resolver1.opendns.com)
    fi
done

echo "not ok, $ip_is != $ip_should"
vpnStatus
sleep 0.1
allUserNotifySend "VPN not connected" "IP check failed: $ip_is != $ip_should" --app-name="nordVPN" -u critical --replaces-process="vpnNotifications"


exit 1

