#!/usr/bin/env bash
#
# bootstrap installs things.

cd "$(dirname "$0")/.."
DOTFILES_ROOT=$(pwd -P)

set -e

echo ''

source ./script/.shared

setup_gitconfig () {
    if ! [ -f ../.gitconfig.local ]
    then
        info 'setup gitconfig'

        git_credential='cache'
        if [ "$(uname -s)" == "Darwin" ]
        then
            git_credential='osxkeychain'
        fi

        user ' - What is your github author name?'
        read -e git_authorname
        user ' - What is your github author email?'
        read -e git_authoremail

        sed -e "s/AUTHORNAME/$git_authorname/g" -e "s/AUTHOREMAIL/$git_authoremail/g" -e "s/GIT_CREDENTIAL_HELPER/$git_credential/g" git/gitconfig.local.symlink.example > ../.gitconfig.local

        success 'gitconfig'
    fi
}



install_dotfiles () {
    info 'installing dotfiles'

    local overwrite_all=false backup_all=false skip_all=false

    for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
    do
        dst="$HOME/.$(basename "${src%.*}")"
        link_file "$src" "$dst"
    done
}

install_dotconfigfiles () {
    info 'installing .config'

    if [ ! -d "$HOME/.config" ]; then
        mkdir "$HOME/.config"
    fi

    local overwrite_all=false backup_all=false skip_all=false

    for src in $(find -H "$DOTFILES_ROOT" -maxdepth 2 -name '*.dotconfig' -not -path '*.git*')
    do
        file=${src%.*}
        dir=${file##*.}
        if [ -n "$dir" ]; then
            dir="$dir/"
	    if [ ! -d "$HOME/.config/$dir" ]; then
		mkdir "$HOME/.config/$dir"
	    fi
        fi
        dst="$HOME/.config/$dir$(basename "${file%.*}")"
        link_file "$src" "$dst"
    done
}

setup_gitconfig
install_dotfiles
install_dotconfigfiles

# If we're on a Mac, let's install and setup homebrew.
if [ "$(uname -s)" == "Darwin" ]
then
    info "installing dependencies"
    if source bin/dot > /tmp/dotfiles-dot 2>&1
    then
        success "dependencies installed"
    else
        fail "error installing dependencies"
    fi
fi

echo ''
echo '  All installed!'
echo 'You probably want to run now: sudo ./script/install'
